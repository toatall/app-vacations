name: Build & Deploy

on: [push]

jobs:
  tests:
    name: PHP ${{ matrix.php }}-pgsql-${{ matrix.mysql }}
    env:
      extensions: dom, json, gd, imagick, pdo, pdo_pgsql
      key: cache-v1
    
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest          

        php:         
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"

        pgsql:
          - "16.3"
          - "latest"

    services:
      pgsql:
        image: postgres:${{ matrix.pgsql }}
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: app-vacations-test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: P@ssw0rd
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v1
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov

      - name: Determine composer cache directory on Linux
        if: matrix.os == 'ubuntu-latest'
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache dependencies installed with composer
        uses: actions/cache@v1
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-${{ matrix.dependencies }}-

      - name: Install dependencies with composer
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi                 

      - name: Apply migration
        run: php tests/bin/yii migrate --interactive=0

      - name: Run tests with codeception 
        run: vendor/bin/codecept run unit

